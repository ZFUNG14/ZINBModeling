zip_model2 <- zeroinfl(complaints ~ visits + gender*residency + hours*revenue | residency + gender + revenue, data = compdat, dist = "negbin")
summary(zip_model2) #AIC:
k <- 13
L <- ( -128.4)
AIC <- (2*(k) - 2*(L))
cat("AIC: ",  AIC )
k <- 13
L <- ( -128.4)
AIC <- (2*(k) - 2*(L))
cat("AIC: ",  AIC )
zip_model4 <- zeroinfl(complaints ~ visits + gender + revenue + hours  + residency:gender| visits*revenue+hours*revenue  , data = compdat, dist = "negbin", EM = TRUE)
summary(zip_model4)
plot(visits,revenue , data= compdat)
plot(compdat$visits ~ compdat$revenue , data= compdat)
View(compdat)
par(mfrow = c(1,3))
boxplot(visits ~ residency, data = compdat, xlab = "Residency Status",ylab = "Number of patient visits", col= c("darkblue","darkred"), main = "Patient visits vs Residency Status")
boxplot(hours ~ residency, data = compdat, xlab = "Residency Status",ylab = "Work duration in a year (hours)", col= c("darkblue","darkred"), main = "Hours Worked vs Residency Status")
boxplot(revenue ~ residency, data = compdat, xlab = "Residency Status",ylab = "Hourly income (dollars)", col= c("darkblue","darkred"), main = "Hourly income vs Residency Status")
plot(compdat$revenue ~ compdat$visits , data= compdat)
knitr::opts_chunk$set(echo = TRUE)
compdat <- read.table("compdat.txt", header = TRUE, sep = "\t")
head(compdat)
sum(duplicated(compdat)) #check for duplicate for data cleaning
#factoring residency and gender into categorical variable
compdat$residency <- factor(compdat$residency, levels = c("Y", "N"), labels = c("Yes", "No"))
compdat$gender <- factor(compdat$gender, levels = c("M", "F"), labels = c("Male", "Female"))
summary(compdat)
par(mfrow = c(1,3))
boxplot(revenue ~ gender, data = compdat, xlab = "Gender",ylab = "Hourly income (dollars)", col= c("skyblue","pink"), main = "Hourly Income vs Gender")
boxplot(hours ~ gender, data = compdat, xlab = "Gender",ylab = "Work duration in a year (hours)", col= c("skyblue","pink"), main = "Hours Worked vs Gender")
boxplot(visits ~ gender, data = compdat, xlab = "Gender",ylab = "Number of patient visits", col= c("skyblue","pink"), main = "Patient visits vs Gender")
par(mfrow = c(1,3))
boxplot(visits ~ residency, data = compdat, xlab = "Residency Status",ylab = "Number of patient visits", col= c("darkblue","darkred"), main = "Patient visits vs Residency Status")
boxplot(hours ~ residency, data = compdat, xlab = "Residency Status",ylab = "Work duration in a year (hours)", col= c("darkblue","darkred"), main = "Hours Worked vs Residency Status")
boxplot(revenue ~ residency, data = compdat, xlab = "Residency Status",ylab = "Hourly income (dollars)", col= c("darkblue","darkred"), main = "Hourly income vs Residency Status")
library(ggplot2)
ggplot(compdat, aes(x = residency, y = complaints, fill = gender)) +
geom_bar(stat = "identity", position = "dodge") +
labs(title = "Complaints by Residency and Gender", x = "Residency", y = "Number of Complaints")
plot(compdat$revenue ~ compdat$visits , data= compdat)
#install.packages("AER")
#library(AER)
model <- glm(complaints ~ visits + residency + gender + revenue + hours, family = poisson , data = compdat )
summary(model)
table(compdat$complaints)
hist(compdat$complaints, xlim= c(0,11), xlab = "Number of complaints in the previous years" , col = "skyblue")
dispersiontest(model)
par(mfrow = c(1,3))
boxplot(revenue ~ gender, data = compdat, xlab = "Gender",ylab = "Hourly income (dollars)", col= c("skyblue","pink"), main = "Hourly Income vs Gender")
boxplot(hours ~ gender, data = compdat, xlab = "Gender",ylab = "Work duration in a year (hours)", col= c("skyblue","pink"), main = "Hours Worked vs Gender")
par(mfrow = c(1,5))
boxplot(revenue ~ gender, data = compdat, xlab = "Gender",ylab = "Hourly income (dollars)", col= c("skyblue","pink"), main = "Hourly Income vs Gender")
boxplot(hours ~ gender, data = compdat, xlab = "Gender",ylab = "Work duration in a year (hours)", col= c("skyblue","pink"), main = "Hours Worked vs Gender")
par(mfrow = c(1,3))
boxplot(revenue ~ gender, data = compdat, xlab = "Gender",ylab = "Hourly income (dollars)", col= c("skyblue","pink"), main = "Hourly Income vs Gender")
boxplot(hours ~ gender, data = compdat, xlab = "Gender",ylab = "Work duration in a year (hours)", col= c("skyblue","pink"), main = "Hours Worked vs Gender")
boxplot(visits ~ residency, data = compdat, xlab = "Residency Status",ylab = "Number of patient visits", col= c("darkblue","darkred"), main = "Patient visits vs Residency Status")
par(mfrow = c(1,4))
boxplot(revenue ~ gender, data = compdat, xlab = "Gender",ylab = "Hourly income (dollars)", col= c("skyblue","pink"), main = "Hourly Income vs Gender")
boxplot(hours ~ gender, data = compdat, xlab = "Gender",ylab = "Work duration in a year (hours)", col= c("skyblue","pink"), main = "Hours Worked vs Gender")
boxplot(visits ~ residency, data = compdat, xlab = "Residency Status",ylab = "Number of patient visits", col= c("darkblue","darkred"), main = "Patient visits vs Residency Status")
par(mfrow = c(1,4))
boxplot(revenue ~ gender, data = compdat, xlab = "Gender",ylab = "Hourly income (dollars)", col= c("skyblue","pink"), main = "Hourly Income vs Gender")
boxplot(hours ~ gender, data = compdat, xlab = "Gender",ylab = "Work duration in a year (hours)", col= c("skyblue","pink"), main = "Hours Worked vs Gender")
boxplot(visits ~ residency, data = compdat, xlab = "Residency Status",ylab = "Number of patient visits", col= c("darkblue","darkred"), main = "Patient visits vs Residency Status")
boxplot(hours ~ residency, data = compdat, xlab = "Residency Status",ylab = "Work duration in a year (hours)", col= c("darkblue","darkred"), main = "Hours Worked vs Residency Status")
par(mfrow = c(1,3))
boxplot(revenue ~ gender, data = compdat, xlab = "Gender",ylab = "Hourly income (dollars)", col= c("skyblue","pink"), main = "Hourly Income vs Gender")
boxplot(hours ~ gender, data = compdat, xlab = "Gender",ylab = "Work duration in a year (hours)", col= c("skyblue","pink"), main = "Hours Worked vs Gender")
boxplot(visits ~ residency, data = compdat, xlab = "Residency Status",ylab = "Number of patient visits", col= c("darkblue","darkred"), main = "Patient visits vs Residency Status")
par(mfrow = c(1,3))
boxplot(hours ~ residency, data = compdat, xlab = "Residency Status",ylab = "Work duration in a year (hours)", col= c("darkblue","darkred"), main = "Hours Worked vs Residency Status")
boxplot(revenue ~ residency, data = compdat, xlab = "Residency Status",ylab = "Hourly income (dollars)", col= c("darkblue","darkred"), main = "Hourly income vs Residency Status")
par(mfrow = c(1,3))
boxplot(visits ~ residency, data = compdat, xlab = "Residency Status",ylab = "Number of patient visits", col= c("darkblue","darkred"), main = "Patient visits vs Residency Status")
boxplot(hours ~ residency, data = compdat, xlab = "Residency Status",ylab = "Work duration in a year (hours)", col= c("darkblue","darkred"), main = "Hours Worked vs Residency Status")
boxplot(revenue ~ residency, data = compdat, xlab = "Residency Status",ylab = "Hourly income (dollars)", col= c("darkblue","darkred"), main = "Hourly income vs Residency Status")
par(mfrow = c(1,3))
boxplot(revenue ~ gender, data = compdat, xlab = "Gender",ylab = "Hourly income (dollars)", col= c("skyblue","pink"), main = "Hourly Income vs Gender")
boxplot(hours ~ gender, data = compdat, xlab = "Gender",ylab = "Work duration in a year (hours)", col= c("skyblue","pink"), main = "Hours Worked vs Gender")
boxplot(visits ~ gender, data = compdat, xlab = "Gender",ylab = "Number of patient visits", col= c("skyblue","pink"), main = "Patient visits vs Gender")
par(mfrow = c(1,3))
boxplot(visits ~ residency, data = compdat, xlab = "Residency Status",ylab = "Number of patient visits", col= c("darkblue","darkred"), main = "Patient visits vs Residency Status")
boxplot(hours ~ residency, data = compdat, xlab = "Residency Status",ylab = "Work duration in a year (hours)", col= c("darkblue","darkred"), main = "Hours Worked vs Residency Status")
boxplot(revenue ~ residency, data = compdat, xlab = "Residency Status",ylab = "Hourly income (dollars)", col= c("darkblue","darkred"), main = "Hourly income vs Residency Status")
#factoring residency and gender into categorical variable
compdat$residency <- factor(compdat$residency)
summary(compdat)
sum(duplicated(compdat)) #check for duplicate for data cleaning
#factoring residency and gender into categorical variable
compdat$residency <- factor(compdat$residency)
compdat$gender <- factor(compdat$gender, levels = c("M", "F"), labels = c("Male", "Female"))
summary(compdat)
compdat <- read.table("compdat.txt", header = TRUE, sep = "\t")
head(compdat)
sum(duplicated(compdat)) #check for duplicate for data cleaning
#factoring residency and gender into categorical variable
compdat$residency <- factor(compdat$residency)
compdat$gender <- factor(compdat$gender, levels = c("M", "F"), labels = c("Male", "Female"))
summary(compdat)
compdat <- read.table("compdat.txt", header = TRUE, sep = "\t")
head(compdat)
sum(duplicated(compdat)) #check for duplicate for data cleaning
#factoring residency and gender into categorical variable
compdat$residency <- factor(compdat$residency, levels = c("Y", "N"), labels = c("Yes", "No"))
compdat$gender <- factor(compdat$gender, levels = c("M", "F"), labels = c("Male", "Female"))
summary(compdat)
par(mfrow = c(1,4))
boxplot(revenue ~ gender, data = compdat, xlab = "Gender",ylab = "Hourly income (dollars)", col= c("skyblue","pink"), main = "Hourly Income vs Gender")
boxplot(hours ~ gender, data = compdat, xlab = "Gender",ylab = "Work duration in a year (hours)", col= c("skyblue","pink"), main = "Hours Worked vs Gender")
boxplot(hours ~ residency, data = compdat, xlab = "Residency Status",ylab = "Work duration in a year (hours)", col= c("darkblue","darkred"), main = "Hours Worked vs Residency Status")
boxplot(revenue ~ residency, data = compdat, xlab = "Residency Status",ylab = "Hourly income (dollars)", col= c("darkblue","darkred"), main = "Hourly income vs Residency Status")
par(mfrow = c(1,4))
boxplot(revenue ~ gender, data = compdat, xlab = "Gender",ylab = "Hourly income (dollars)", col= c("skyblue","pink"), main = "Hourly Income vs Gender")
boxplot(hours ~ gender, data = compdat, xlab = "Gender",ylab = "Work duration in a year (hours)", col= c("skyblue","pink"), main = "Hours Worked vs Gender")
boxplot(visits ~ residency, data = compdat, xlab = "Residency Status",ylab = "Number of patient visits", col= c("darkblue","darkred"), main = "Patient visits vs Residency Status")
boxplot(revenue ~ residency, data = compdat, xlab = "Residency Status",ylab = "Hourly income (dollars)", col= c("darkblue","darkred"), main = "Hourly income vs Residency Status")
par(mfrow = c(1,4))
boxplot(revenue ~ gender, data = compdat, xlab = "Gender",ylab = "Hourly income (dollars)", col= c("skyblue","pink"), main = "Hourly Income vs Gender")
boxplot(hours ~ gender, data = compdat, xlab = "Gender",ylab = "Work duration in a year (hours)", col= c("skyblue","pink"), main = "Hours Worked vs Gender")
boxplot(hours ~ residency, data = compdat, xlab = "Residency Status",ylab = "Work duration in a year (hours)", col= c("darkblue","darkred"), main = "Hours Worked vs Residency Status")
boxplot(revenue ~ residency, data = compdat, xlab = "Residency Status",ylab = "Hourly income (dollars)", col= c("darkblue","darkred"), main = "Hourly income vs Residency Status")
par(mfrow = c(1,4))
boxplot(revenue ~ gender, data = compdat, xlab = "Gender",ylab = "Hourly income (dollars)", col= c("skyblue","pink"), main = "Revenue vs Gender")
boxplot(hours ~ gender, data = compdat, xlab = "Gender",ylab = "Work duration in a year (hours)", col= c("skyblue","pink"), main = "Hours vs Gender")
boxplot(hours ~ residency, data = compdat, xlab = "Residency Status",ylab = "Work duration in a year (hours)", col= c("darkblue","darkred"), main = "Hours vs Residency")
boxplot(revenue ~ residency, data = compdat, xlab = "Residency Status",ylab = "Hourly income (dollars)", col= c("darkblue","darkred"), main = "Revenue vs Residency")
plot(compdat$revenue ~ compdat$visits , data= compdat)
table(compdat$complaints)
hist(compdat$complaints, xlim= c(0,11), xlab = "Number of complaints in the previous years" , col = "skyblue")
dispersiontest(model)
library(AER)
library(AER)
table(compdat$complaints)
hist(compdat$complaints, xlim= c(0,11), xlab = "Number of complaints in the previous years" , col = "skyblue")
dispersiontest(model)
#library(AER)
table(compdat$complaints)
hist(compdat$complaints, xlim= c(0,11), xlab = "Number of complaints in the previous years" , col = "skyblue")
dispersiontest(model)
library(pscl)
# Fit Zero-Inflated Negative Binomial Model
zip_model <- zeroinfl(complaints ~ visits + residency + gender + revenue + hours | visits + residency + gender + revenue + hours, data = compdat, dist = "negbin")
summary(zip_model) #292.2
zip_model2 <- zeroinfl(complaints ~ visits + gender*residency + hours + revenue | residency + gender + revenue, data = compdat, dist = "negbin")
summary(zip_model2) #AIC:
zip_model2 <- zeroinfl(complaints ~ visits + gender*residency + hours + revenue | visits + residency + gender + revenue + hours, data = compdat, dist = "negbin")
summary(zip_model2) #AIC:
zip_model2 <- zeroinfl(complaints ~ visits + gender*residency + hours + revenue | residency + gender + visits*revenue + hours, data = compdat, dist = "negbin")
summary(zip_model2) #AIC:
cat('\n')
zip_model2 <- zeroinfl(complaints ~ visits + gender*residency + hours + revenue | residency + gender + revenue + hours, data = compdat, dist = "negbin")
summary(zip_model2) #AIC:
cat('\n')
zip_model2 <- zeroinfl(complaints ~ visits + gender:residency + hours + revenue | residency + gender + revenue + hours, data = compdat, dist = "negbin")
zip_model4 <- zeroinfl(complaints ~ visits + gender + revenue + hours  + residency:gender| visits*revenue+hours*revenue  , data = compdat, dist = "negbin", EM = TRUE)
summary(zip_model4)
library(pscl)
zip_model <- zeroinfl(complaints ~ visits + residency + gender + revenue + hours | visits + residency + gender + revenue + hours, data = compdat, dist = "negbin")
summary(zip_model)
zip_model2 <- zeroinfl(complaints ~ visits + gender + revenue + hours  + residency:gender| visits*revenue+hours*revenue  , data = compdat, dist = "negbin", EM = TRUE)
summary(zip_model2)
k <- 14
L <- ( -120.2)
AIC <- (2*(k) - 2*(L))
cat("AIC: ",  AIC )
zip_model2 <- zeroinfl(complaints ~ visits + gender + revenue + hours  + residency:gender| visits*revenue+hours*revenue  , data = compdat, dist = "negbin", EM = TRUE)
summary(zip_model2)
library(pscl)
zip_model <- zeroinfl(complaints ~ visits + residency + gender + revenue + hours | visits + residency + gender + revenue + hours, data = compdat, dist = "negbin", EM = TRUE)
summary(zip_model)
# Set up a 1x2 plot layout
par(mfrow = c(1, 2))
# Plot 1: Pearson residuals
plot(residuals(zip_model2, type = "pearson"),
ylab = "Pearson residuals",
xlab = "Index",
main = "Pearson Residuals")
# Plot 2: Pearson residuals vs fitted values
plot(residuals(zip_model2, type = "pearson") ~ fitted(zip_model2),
xlab = "Fitted values",
ylab = "Pearson residuals",
main = "Residuals vs Fitted Values")
# Add a title to the entire plot layout
mtext("Zero-inflated Negative Binomial Model", side = 3, line = -2, outer = TRUE)
# Reset the plotting layout
par(mfrow = c(1, 1))
AIC(compdat)
AIC(zip_model2)
k <- 14
L <- ( -120.2)
AIC <- (2*(k) - 2*(L))
cat("AIC: ",  AIC )
AIC(zip_model2)
# Set up a 1x2 plot layout
par(mfrow = c(2, 1))
# Plot 1: Pearson residuals
plot(residuals(zip_model2, type = "pearson"),
ylab = "Pearson residuals",
xlab = "Index",
main = "Pearson Residuals")
# Plot 2: Pearson residuals vs fitted values
plot(residuals(zip_model2, type = "pearson") ~ fitted(zip_model2),
xlab = "Fitted values",
ylab = "Pearson residuals",
main = "Residuals vs Fitted Values")
# Add a title to the entire plot layout
mtext("Zero-inflated Negative Binomial Model", side = 3, line = -2, outer = TRUE)
# Reset the plotting layout
par(mfrow = c(1, 1))
# Set up a 1x2 plot layout
par(mfrow = c(1, 2))
# Plot 1: Pearson residuals
plot(residuals(zip_model2, type = "pearson"),
ylab = "Pearson residuals",
xlab = "Index",
main = "Pearson Residuals")
# Plot 2: Pearson residuals vs fitted values
plot(residuals(zip_model2, type = "pearson") ~ fitted(zip_model2),
xlab = "Fitted values",
ylab = "Pearson residuals",
main = "Residuals vs Fitted Values")
# Add a title to the entire plot layout
mtext("Zero-inflated Negative Binomial Model", side = 3, line = -2, outer = TRUE)
# Reset the plotting layout
par(mfrow = c(1, 1))
# Set up a 1x2 plot layout
#par(mfrow = c(1, 2))
# Plot 1: Pearson residuals
plot(residuals(zip_model2, type = "pearson"),
ylab = "Pearson residuals",
xlab = "Index",
main = "Pearson Residuals")
# Plot 2: Pearson residuals vs fitted values
plot(residuals(zip_model2, type = "pearson") ~ fitted(zip_model2),
xlab = "Fitted values",
ylab = "Pearson residuals",
main = "Residuals vs Fitted Values")
# Add a title to the entire plot layout
mtext("Zero-inflated Negative Binomial Model", side = 3, line = -2, outer = TRUE)
# Reset the plotting layout
par(mfrow = c(1, 1))
#install.packages("AER")
#library(AER)
pm.model <- glm(complaints ~ visits + residency + gender + revenue + hours, family = poisson , data = compdat )
summary(model)
dispersiontest(model)
#install.packages("AER")
#library(AER)
pm.model <- glm(complaints ~ visits + residency + gender + revenue + hours, family = poisson , data = compdat )
summary(model)
dispersiontest(model)
# Plot residuals vs. fititted values
plot(predict(compdat.pm, type = "response"), residuals(compdat.pm, type = "pearson"), xlab = "Fitted Values", ylab = "Pearson Residuals", main = "Residuals vs Fitted")
# Plot residuals vs. fititted values
plot(predict(zip_model2, type = "response"), residuals(zip_model2, type = "pearson"), xlab = "Fitted Values", ylab = "Pearson Residuals", main = "Residuals vs Fitted")
abline(h = 0, col = "red")
# Set up a 1x2 plot layout
par(mfrow = c(1, 2))
# Plot 1: Pearson residuals
plot(residuals(zip_model2, type = "pearson"),
ylab = "Pearson residuals",
xlab = "Index",
main = "Pearson Residuals")
# Plot 2: Pearson residuals vs fitted values
plot(residuals(zip_model2, type = "pearson") ~ fitted(zip_model2),
xlab = "Fitted values",
ylab = "Pearson residuals",
main = "Residuals vs Fitted Values")
abline(h = 0, col = "red")
# Add a title to the entire plot layout
mtext("Zero-inflated Negative Binomial Model", side = 3, line = -2, outer = TRUE)
# Reset the plotting layout
par(mfrow = c(1, 1))
rootogram(pm.model)
install.packages("ggplot2")  # Run this if ggplot2 is not installed
library(ggplot2)
rootogram(pm.model)
install.packages("ggplot2")
install.packages("ggplot2")
library(ggplot2)
rootogram(pm.model)
knitr::opts_chunk$set(echo = TRUE)
install.packages("ggplot2")
library(ggplot2)
rootogram(pm.model)
library(ggplot2)
rootogram(pm.model)
install.packages("ggplot2")
library(ggplot2)
rootogram(pm.model)
knitr::opts_chunk$set(echo = TRUE)
rootogram(pm.model)
library(topmodels)
install.packages("topmodels")
library(topmodels)
library(ggplot2)
library(ggplot2)
rootogram(pm.model)
library(MASS)
rootogram(pm.model)
library(topmodels)
library(MASS)
library(ggplot2)
library(topmodels)
library(MASS)
library(ggplot2)
rootogram(pm.model)
library(MASS)
library(ggplot2)
library(countreg)
library(MASS)
library(ggplot2)
library(countreg)
install.packages("countreg")
library(countreg)
install.packages("countreg")
library(topmodel)
rootogram(pm.model)
rootogram(pm.model)
library(MASS)
library(ggplot2)
library(countreg)
rootogram(pm.model)
qp.model <- glm(complaints ~ visits + residency + gender + revenue + hours, data = compdat, family = quasipoisson)
summary(qp.model)
par(mfrow = c(1, 2))
plot(residuals(qp.model, type = "pearson"), ylab = "Pearson residuals")
plot(residuals(qp.model, type = "pearson") ~ qp.model$fitted, xlab = "Fitted values",
ylab = "Pearson residuals")
mtext("Quasi-Poisson model", side = 3, line = -2, outer = TRUE)
par(mfrow = c(1, 1))
nb.model <- glm.nb(complaints ~ visits + residency + gender + revenue + hours, data = compdat)
summary(nb.model)
par(mfrow = c(1, 2))
plot(residuals(nb.model, type = "pearson"), ylab = "Pearson residuals")
plot(residuals(nb.model, type = "pearson") ~ nb.model$fitted, xlab = "Fitted values", ylab = "Pearson residuals")
mtext("Negative binomial model", side = 3, line = -2, outer = TRUE)
par(mfrow = c(1, 1))
zip.model <- zeroinfl(complaints ~ visits + residency + gender + revenue + hours | complaints ~ visits + residency + gender + revenue + hours, dist = "poisson", data = apple)
library(pscl)
zip.model <- zeroinfl(complaints ~ visits + residency + gender + revenue + hours | complaints ~ visits + residency + gender + revenue + hours, dist = "poisson", data = apple)
library(pscl)
zip.model <- zeroinfl(complaints ~ visits + residency + gender + revenue + hours | complaints ~ visits + residency + gender + revenue + hours, dist = "poisson", data = compdat)
library(pscl)
zip.model <- zeroinfl(complaints ~ visits + residency + gender + revenue + hours | visits + residency + gender + revenue + hours, dist = "poisson", data = compdat)
summary(zip.model)
library(pscl)
zip.model <- zeroinfl(complaints ~ visits + residency + gender + revenue + hours | residency + gender + revenue + hours, dist = "poisson", data = compdat)
summary(zip.model)
library(pscl)
zip.model <- zeroinfl(complaints ~ visits + residency + gender + revenue + hours | visits + revenue + hours, dist = "poisson", data = compdat)
summary(zip.model)
library(pscl)
zip.model <- zeroinfl(complaints ~ visits + residency + gender + revenue + hours | residency + gender + revenue + hours, dist = "poisson", data = compdat)
summary(zip.model)
par(mfrow = c(1, 2))
plot(residuals(zip.model, type = "pearson"), ylab = "Pearson Residuals")
plot(residuals(zip.model, type = "pearson") ~ zip.model$fitted, xlab = "Fitted values", ylab = "Pearson residuals")
mtext("Zero-inflated Poisson model", side = 3, line = -2, outer = TRUE)
par(mfrow = c(1, 1))
rootogram(zip.model)
zip_model2 <- zeroinfl(complaints ~ visits + gender + revenue + hours  + residency:gender| visits*revenue+hours*revenue  , data = compdat, dist = "negbin", EM = TRUE)
summary(zip_model2)
par(mfrow = c(1, 2))
plot(residuals(zip_model2, type = "pearson"), ylab = "Pearson residuals") plot(residuals(zip_model2, type = "pearson") ~ zip_model2$fitted, xlab = "Fitted values",
par(mfrow = c(1, 2))
plot(residuals(zip_model2, type = "pearson"), ylab = "Pearson residuals")
plot(residuals(zip_model2, type = "pearson") ~ zip_model2$fitted, xlab = "Fitted values", ylab = "Pearson residuals")
mtext("Zero-inflated negative binomial model", side = 3, line = -2, outer = TRUE)
par(mfrow = c(1, 1))
par(mfrow = c(1, 2))
plot(residuals(zipNB_model2, type = "pearson"), ylab = "Pearson residuals")
zipNB_model2 <- zeroinfl(complaints ~ visits + gender + revenue + hours  + residency:gender| visits*revenue+hours*revenue  , data = compdat, dist = "negbin", EM = TRUE)
summary(zipNB_model2)
AIC(zipNB_model2)
par(mfrow = c(1, 2))
plot(residuals(zipNB_model2, type = "pearson"), ylab = "Pearson residuals")
plot(residuals(zipNB_model2, type = "pearson") ~ zip_model2$fitted, xlab = "Fitted values", ylab = "Pearson residuals")
mtext("Zero-inflated negative binomial model", side = 3, line = -2, outer = TRUE)
par(mfrow = c(1, 1))
stepAIC(zipNB_model2)
stepAIC(zipNB_model)
library(pscl)
zipNB_model <- zeroinfl(complaints ~ visits + residency + gender + revenue + hours | visits + residency + gender + revenue + hours, data = compdat, dist = "negbin", EM = TRUE)
summary(zipNB_model)
library(pscl)
zipNB_model <- zeroinfl(complaints ~ visits + residency + gender + revenue + hours | visits + revenue + hours, data = compdat, dist = "negbin", EM = TRUE)
summary(zipNB_model)
library(pscl)
zipNB_model <- zeroinfl(complaints ~ visits + residency + gender + revenue + hours | visits*revenue + hours, data = compdat, dist = "negbin", EM = TRUE)
summary(zipNB_model)
library(pscl)
zipNB_model <- zeroinfl(complaints ~ visits + residency + gender + revenue + hours | visits*revenue + revenue*hours, data = compdat, dist = "negbin", EM = TRUE)
summary(zipNB_model)
library(pscl)
zipNB_model <- zeroinfl(complaints ~ visits + residency + gender + revenue + hours | visits + residency + gender + revenue + hours, data = compdat, dist = "negbin", EM = TRUE)
summary(zipNB_model)
stepAIC(zipNB_model)
stepAIC(zipNB_model2)
zipNB_model2 <- zeroinfl(complaints ~ visits + gender + revenue + hours  + residency:gender| visits*revenue+hours*revenue  , data = compdat, dist = "negbin", EM = TRUE)
summary(zipNB_model2)
rootogram(pm.model)
str(compdat)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
CD <- read.table("CD.txt", header = TRUE, sep = "\t")
stepAIC(zipNB_model2)
CD <- read.table("CD.txt", header = TRUE, sep = "\t")
CD <- read.table("CD.txt", header = TRUE, sep = "\t")
CD <- read.table("compdat.txt", header = TRUE, sep = "\t")
head(CD)
str(CD)
knitr::opts_chunk$set(echo = TRUE)
CD <- read.table("compdat.txt", header = TRUE, sep = "\t")
head(CD)
str(CD)
sum(duplicated(CD)) #check for duplicate for data cleaning
#factoring residency and gender into categorical variable
CD$residency <- factor(CD$residency, levels = c("Y", "N"), labels = c("Yes", "No"))
CD$gender <- factor(CD$gender, levels = c("M", "F"), labels = c("Male", "Female"))
summary(CD)
par(mfrow = c(1,3))
boxplot(revenue ~ gender, data = CD, xlab = "Gender",ylab = "Hourly income (dollars)", col= c("skyblue","pink"), main = "Hourly Income vs Gender")
boxplot(hours ~ gender, data = CD, xlab = "Gender",ylab = "Work duration in a year (hours)", col= c("skyblue","pink"), main = "Hours Worked vs Gender")
boxplot(visits ~ gender, data = CD, xlab = "Gender",ylab = "Number of patient visits", col= c("skyblue","pink"), main = "Patient visits vs Gender")
par(mfrow = c(1,3))
boxplot(visits ~ residency, data = CD, xlab = "Residency Status",ylab = "Number of patient visits", col= c("darkblue","darkred"), main = "Patient visits vs Residency Status")
boxplot(hours ~ residency, data = CD, xlab = "Residency Status",ylab = "Work duration in a year (hours)", col= c("darkblue","darkred"), main = "Hours Worked vs Residency Status")
boxplot(revenue ~ residency, data = CD, xlab = "Residency Status",ylab = "Hourly income (dollars)", col= c("darkblue","darkred"), main = "Hourly income vs Residency Status")
par(mfrow = c(1,4))
boxplot(revenue ~ gender, data = CD, xlab = "Gender",ylab = "Hourly income (dollars)", col= c("skyblue","pink"), main = "Revenue vs Gender")
boxplot(hours ~ gender, data = CD, xlab = "Gender",ylab = "Work duration in a year (hours)", col= c("skyblue","pink"), main = "Hours vs Gender")
boxplot(hours ~ residency, data = CD, xlab = "Residency Status",ylab = "Work duration in a year (hours)", col= c("darkblue","darkred"), main = "Hours vs Residency")
boxplot(revenue ~ residency, data = CD, xlab = "Residency Status",ylab = "Hourly income (dollars)", col= c("darkblue","darkred"), main = "Revenue vs Residency")
library(ggplot2)
ggplot(CD, aes(x = residency, y = complaints, fill = gender)) +
geom_bar(stat = "identity", position = "dodge") +
labs(title = "Complaints by Residency and Gender", x = "Residency", y = "Number of Complaints")
#install.packages("AER")
#library(AER)
pm.model <- glm(complaints ~ visits + residency + gender + revenue + hours, family = poisson , data = CD )
summary(model)
dispersiontest(model)
stepAIC(zipNB_model2)
#install.packages("AER")
library(AER)
pm.model <- glm(complaints ~ visits + residency + gender + revenue + hours, family = poisson , data = CD )
summary(model)
dispersiontest(model)
rootogram(pm.model)
zipNB_model2 <- zeroinfl(complaints ~ visits + gender + revenue + hours  + residency:gender| visits*revenue+hours*revenue  , data = CD, dist = "negbin", EM = TRUE)
summary(zipNB_model2)
#library(AER)
table(CD$complaints)
hist(CD$complaints, xlim= c(0,11), xlab = "Number of complaints in the previous years" , col = "skyblue")
install.package("distributions3")
install.packages("distributions3")
install.packages("countreg", repos="http://R-Forge.R-project.org")
install.packages("distributions3")
install.packages("countreg", repos="http://R-Forge.R-project.org")
install.packages("topmodels", repos="http://R-Forge.R-project.org")
rootogram(pm.model)
rootogram(pm.model)
library(countreg)
library(topmodel)
rootogram(pm.model)
rootogram(pm.model)
#library(AER)
table(CD$complaints)
hist(CD$complaints, xlim= c(0,11), xlab = "Number of complaints in the previous years" , col = "skyblue")
zipNB_model2 <- zeroinfl(complaints ~ visits + gender + revenue + hours  + residency:gender| visits*revenue+hours*revenue  , data = CD, dist = "negbin", EM = TRUE)
summary(zipNB_model2)
zipNB_model2 <- zeroinfl(complaints ~ visits + gender + revenue + hours  + residency:gender| visits*revenue+hours*revenue  , data = CD, dist = "negbin", EM = TRUE)
summary(zipNB_model2)
zipNB_model2 <- zeroinfl(complaints ~ visits + gender + revenue + hours  + residency:gender| visits*revenue+hours*revenue  , data = CD, dist = "negbin", EM = TRUE)
summary(zipNB_model2)
par(mfrow = c(1, 2))
plot(residuals(zipNB_model2, type = "pearson"), ylab = "Pearson residuals")
plot(residuals(zipNB_model2, type = "pearson") ~ zip_model2$fitted, xlab = "Fitted values", ylab = "Pearson residuals")
mtext("Zero-inflated negative binomial model", side = 3, line = -2, outer = TRUE)
par(mfrow = c(1, 1))
knitr::opts_chunk$set(echo = TRUE)
CD <-read.table("compdat.txt", header = TRUE)
CD <-read.table("compdat.txt", header = TRUE)
CD <-read.table("compdat.txt", header = TRUE)
CD <-read.table("compdat.txt", header = TRUE)
CD <- read.table("compdat.txt", header = TRUE, sep = "\t")
head(CD)
str(CD)
sum(duplicated(CD))
CD$residency <- factor(CD$residency, levels = c("Y", "N"), labels = c("Yes", "No"))
CD$gender <- factor(CD$gender, levels = c("M", "F"), labels = c("Male", "Female"))
summary(CD)
#install.packages("AER")
library(AER)
pm.model <- glm(complaints ~ visits + residency + gender + revenue + hours, family = poisson , data = CD )
summary(model)
dispersiontest(model)
qp.model <- glm(complaints ~ visits + residency + gender + revenue + hours, data = CD, family = quasipoisson)
summary(qp.model)
nb.model <- glm.nb(complaints ~ visits + residency + gender + revenue + hours, data = CD)
summary(nb.model)
library(pscl)
zip.model <- zeroinfl(complaints ~ visits + residency + gender + revenue + hours | residency + gender + revenue + hours, dist = "poisson", data = CD)
summary(zip.model)
library(pscl)
zipNB_model <- zeroinfl(complaints ~ visits + residency + gender + revenue + hours | visits + residency + gender + revenue + hours, data = CD, dist = "negbin", EM = TRUE)
summary(zipNB_model)
zipNB_model2 <- zeroinfl(complaints ~ visits + gender + revenue + hours  + residency:gender| visits*revenue+hours*revenue  , data = CD, dist = "negbin", EM = TRUE)
summary(zipNB_model2)
